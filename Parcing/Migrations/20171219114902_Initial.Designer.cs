// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Parcing.Models;
using System;

namespace Parcing.Migrations
{
    [DbContext(typeof(RevContext))]
    [Migration("20171219114902_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Parcing.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Domain");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Parcing.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Rate");

                    b.Property<bool>("Usefull");

                    b.HasKey("Id");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("Parcing.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Date");

                    b.Property<int>("Likes");

                    b.Property<string>("Minuses");

                    b.Property<string>("Name");

                    b.Property<string>("Pluses");

                    b.Property<int>("RateId");

                    b.Property<string>("SitePath");

                    b.Property<string>("Text");

                    b.Property<string>("URL");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RateId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Parcing.Models.TargetRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Rate");

                    b.Property<int>("ReviewId");

                    b.Property<string>("Target");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.ToTable("TargetRates");
                });

            modelBuilder.Entity("Parcing.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("From");

                    b.Property<string>("Name");

                    b.Property<int>("Reputation");

                    b.Property<int>("RevCount");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("Parcing.Models.Review", b =>
                {
                    b.HasOne("Parcing.Models.Rating", "Rate")
                        .WithOne("Rev")
                        .HasForeignKey("Parcing.Models.Review", "RateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Parcing.Models.User", "Reviever")
                        .WithOne("Rev")
                        .HasForeignKey("Parcing.Models.Review", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Parcing.Models.TargetRating", b =>
                {
                    b.HasOne("Parcing.Models.Rating", "NavRate")
                        .WithMany("Ratings")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
